{"version":3,"sources":["pages/HomePage.js","pages/AboutPage.js","pages/Project-content.js","components/ProjectList.js","pages/ProjectsListPage.js","pages/NotFoundPage.js","components/CommentsList.js","components/UpvotesSection.js","components/AddCommentForm.js","pages/ProjectPage.js","NavBar.js","App.js","reportWebVitals.js","index.js"],"names":["HomePage","AboutPage","ProjectContent","name","title","content","ProjectsList","projects","map","project","key","className","to","substring","ProjectsListPage","NotFoundPage","CommentsList","comments","comment","username","text","UpvotesSetion","projectName","upvotes","setProjectInfo","upvoteProject","a","fetch","method","result","json","body","onClick","AddCommentForm","useState","setUserName","commentText","setCommentText","addComment","JSON","stringify","headers","id","type","value","onChange","event","target","rows","cols","ProjectPage","match","params","find","projectInfo","useEffect","console","log","fetchData","otherProjects","filter","paragraph","NavBar","App","path","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.28f688a5.chunk.js","sourcesContent":["import React from \"react\";\n\nconst HomePage = () => (\n  <>\n    <h1>Hello, welcome to my programing journey</h1>\n    <p>\n      Hello, I am Brendan Yeong, and I am passionate about building\n      web-application and improving my skills in functional programming. Welcome\n      to my blog, where I will post my learning progression of React framework\n      and building some web applications along the way.\n    </p>\n    <p>\n      I am going to learn and explore as much of the latest and mordern\n      full-stack technology as I build some fun projects.\n    </p>\n  </>\n);\n\nexport default HomePage;\n","import React from \"react\";\n\nconst AboutPage = () => (\n  <>\n    <h1>About me</h1>\n    <p>\n      Hello, I am Brendan Yeong and I am from Malaysia. I graduated from Iowa\n      State University 2021 and majored in Computer Science. I am passionate\n      about building web-application and improving my skills in functional\n      programming.\n    </p>\n    <h2>Hobbies</h2>\n    <ul>\n      <li>Travel</li>\n      <li>Badminton</li>\n      <li>Weight lifting</li>\n      <li>Playing computer games</li>\n    </ul>\n  </>\n);\n\nexport default AboutPage;\n","const ProjectContent = [\n  {\n    name: \"first-react-app\",\n    title: \"Making my fisrt React app \",\n    content: [\n      `This is my first react app where I will be following a guide provided by reactjs.org. \n    In this tutorial we will be making a tic-tac-toe game with some backtracking moves and learn about some of the core basics such as,\n    passing data through props, making interactive components, lifting up states and many more. The guide provides some a full react project from start to finish.\n    I will be using this guide, \"https://reactjs.org/tutorial/tutorial.html\"`,\n    ],\n  },\n  {\n    name: \"second-react-app\",\n    title: \"Building this blog/project progression\",\n    content: [\n      `This will be my second react project where I will attempt and learn how to build a full-stack app.\n      I will have to learn some new stack technology such as Express.js and MongoDB(non relational database) and AWS.\n      The purpose of this blog site is to show my react progression learning and what better way to learn react is by building your own app to keep track of progression.`,\n    ],\n  },\n];\n\nexport default ProjectContent;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst ProjectsList = ({ projects }) => (\n  <>\n    {projects.map((project, key) => (\n      <Link\n        className=\"project-list-item\"\n        key={key}\n        to={`/project/${project.name}`}\n      >\n        <h3>{project.title}</h3>\n        <p>{project.content[0].substring(0, 150)}...</p>\n      </Link>\n    ))}\n  </>\n);\n\nexport default ProjectsList;\n","import React from \"react\";\nimport ProjectContent from \"./Project-content\";\nimport ProjectsList from \"../components/ProjectList\";\n\nconst ProjectsListPage = () => (\n  <>\n    <h1>Projects</h1>\n    <ProjectsList projects={ProjectContent} />\n  </>\n);\n\nexport default ProjectsListPage;\n","import React from \"react\";\n\nconst NotFoundPage = () => <h1>404: Page Not found</h1>;\n\nexport default NotFoundPage;\n","import React from \"react\";\n\nconst CommentsList = ({ comments }) => (\n  <>\n    <h3>Comments:</h3>\n    {comments.map((comment, key) => (\n      <div className=\"comment\" key={key}>\n        <h4>{comment.username}</h4>\n        <p>{comment.text}</p>\n      </div>\n    ))}\n  </>\n);\n\nexport default CommentsList;\n","import React from \"react\";\n\nconst UpvotesSetion = ({ projectName, upvotes, setProjectInfo }) => {\n  const upvoteProject = async () => {\n    const result = await fetch(`/api/projects/${projectName}/upvote`, {\n      method: \"post\",\n    });\n    const body = await result.json();\n    setProjectInfo(body);\n  };\n  return (\n    <div className=\"upvotes-section\">\n      <button onClick={() => upvoteProject()}>Add Upvote</button>\n      <p>This post has been upvoted {upvotes} times</p>\n    </div>\n  );\n};\n\nexport default UpvotesSetion;\n","import React, { useState } from \"react\";\n\nconst AddCommentForm = ({ projectName, setProjectInfo }) => {\n  const [username, setUserName] = useState(\"\");\n  const [commentText, setCommentText] = useState(\"\");\n\n  const addComment = async () => {\n    const result = await fetch(`/api/projects/${projectName}/add-comment`, {\n      method: \"post\",\n      body: JSON.stringify({ username, text: commentText }),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    });\n    const body = await result.json();\n    setProjectInfo(body);\n    setUserName(\"\");\n    setCommentText(\"\");\n  };\n\n  return (\n    <div id=\"add-comment-form\">\n      <h3>Add a Comment</h3>\n      <label>\n        Name:{\" \"}\n        <input\n          type=\"text\"\n          value={username}\n          onChange={(event) => setUserName(event.target.value)}\n        />\n      </label>\n      <label>\n        Comment:{\" \"}\n        <textarea\n          rows=\"4\"\n          cols=\"50\"\n          value={commentText}\n          onChange={(event) => setCommentText(event.target.value)}\n        />\n      </label>\n      <button onClick={() => addComment()}>Add Comment</button>\n    </div>\n  );\n};\n\nexport default AddCommentForm;\n","import React, { useState, useEffect } from \"react\";\nimport ProjectContent from \"./Project-content\";\nimport ProjectsList from \"../components/ProjectList\";\nimport NotFoundPage from \"./NotFoundPage\";\nimport CommentsList from \"../components/CommentsList\";\nimport UpvotesSetion from \"../components/UpvotesSection\";\nimport AddCommentForm from \"../components/AddCommentForm\";\n\nconst ProjectPage = ({ match }) => {\n  const name = match.params.name;\n  const project = ProjectContent.find((project) => project.name === name);\n\n  const [projectInfo, setProjectInfo] = useState({ upvotes: 0, comments: [] });\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await fetch(`/api/projects/${name}`);\n      const body = await result.json();\n      console.log(body);\n      setProjectInfo(body);\n    };\n    fetchData();\n  }, [name]);\n\n  if (!project) return <NotFoundPage />;\n\n  const otherProjects = ProjectContent.filter(\n    (project) => project.name !== name\n  );\n\n  return (\n    <>\n      <h1>{project.title}</h1>\n      <UpvotesSetion\n        projectName={name}\n        upvotes={projectInfo.upvotes}\n        setProjectInfo={setProjectInfo}\n      />\n      {project.content.map((paragraph, key) => (\n        <p key={key}>{paragraph}</p>\n      ))}\n      <CommentsList comments={projectInfo.comments} />\n      <AddCommentForm projectName={name} setProjectInfo={setProjectInfo} />\n      <h3>Other Projects:</h3>\n      <ProjectsList projects={otherProjects} />\n    </>\n  );\n};\nexport default ProjectPage;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst NavBar = () => (\n  <nav>\n    <ul>\n      <li>\n        <Link to=\"/\">Home</Link>\n      </li>\n      <li>\n        <Link to=\"/about\">About</Link>\n      </li>\n      <li>\n        <Link to=\"/projects-list\">Projects</Link>\n      </li>\n    </ul>\n  </nav>\n);\n\nexport default NavBar;\n","import \"./App.css\";\nimport HomePage from \"./pages/HomePage\";\nimport AboutPage from \"./pages/AboutPage\";\nimport ProjectsListPage from \"./pages/ProjectsListPage\";\nimport ProjectPage from \"./pages/ProjectPage\";\nimport NotFoundPage from \"./pages/NotFoundPage\";\nimport NavBar from \"./NavBar\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <NavBar />\n        <div id=\"page-body\">\n          <Switch>\n            <Route path=\"/\" component={HomePage} exact />\n            <Route path=\"/about\" component={AboutPage} />\n            <Route path=\"/projects-list\" component={ProjectsListPage} />\n            <Route path=\"/project/:name\" component={ProjectPage} />\n            <Route component={NotFoundPage} />\n          </Switch>\n        </div>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import \"whatwg-fetch\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}